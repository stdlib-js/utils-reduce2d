{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert-is-array-like-object';\nimport isCollection from '@stdlib/assert-is-collection';\nimport isFunction from '@stdlib/assert-is-function';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Reduces the number of dimensions by one of a two-dimensional nested array by applying a function against an accumulator and each element along the innermost dimension and returning the accumulation results as a one-dimensional array.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **accumulator**: accumulated value.\n*     -   **value**: array element.\n*     -   **indices**: current array element indices.\n*     -   **arr**: input array.\n*\n* @param {ArrayLikeObject<Collection>} arr - array of arrays\n* @param {ArrayLikeObject} initial - initial values\n* @param {Function} reducer - reduction function\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be an array of arrays\n* @throws {TypeError} second argument must be an array-like object\n* @throws {RangeError} second argument must have a length equal to the size of the outermost input array dimension\n* @throws {TypeError} third argument must be a function\n* @returns {Array} results\n*\n* @example\n* import naryFunction from '@stdlib/utils-nary-function';\n* import add from '@stdlib/math-base-ops-add';\n*\n* var arr = [\n*     [ 1, 2, 3 ],\n*     [ 4, 5, 6 ]\n* ];\n*\n* var out = reduce2d( arr, [ 0, 0 ], naryFunction( add, 2 ) );\n* // returns [ 6, 15 ]\n*/\nfunction reduce2d( arr, initial, reducer, thisArg ) {\n\tvar out;\n\tvar acc;\n\tvar M;\n\tvar N;\n\tvar a;\n\tvar i;\n\tvar j;\n\n\tif ( !isArrayLikeObject( arr ) ) {\n\t\tthrow new TypeError( format( '1XJ2O', arr ) );\n\t}\n\tif ( !isArrayLikeObject( initial ) ) {\n\t\tthrow new TypeError( format( '1XJ2y', initial ) );\n\t}\n\tif ( initial.length !== arr.length ) {\n\t\tthrow new RangeError( format('1XJ1p') );\n\t}\n\tif ( !isFunction( reducer ) ) {\n\t\tthrow new TypeError( format( '1XJ3N', reducer ) );\n\t}\n\tM = arr.length;\n\tout = [];\n\tfor ( i = 0; i < M; i++ ) {\n\t\ta = arr[ i ];\n\t\tif ( !isCollection( a ) ) {\n\t\t\tthrow new TypeError( format( '1XJBM', i, a ) );\n\t\t}\n\t\tN = a.length;\n\t\tacc = initial[ i ];\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\tacc = reducer.call( thisArg, acc, a[ j ], [ i, j ], arr );\n\t\t}\n\t\tout.push( acc );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default reduce2d;\n"],"names":["reduce2d","arr","initial","reducer","thisArg","out","acc","M","N","a","i","j","isArrayLikeObject","TypeError","format","length","RangeError","isFunction","isCollection","call","push"],"mappings":";;mYAgEA,SAASA,EAAUC,EAAKC,EAASC,EAASC,GACzC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,IAAMC,EAAmBX,GACxB,MAAM,IAAIY,UAAWC,EAAQ,QAASb,IAEvC,IAAMW,EAAmBV,GACxB,MAAM,IAAIW,UAAWC,EAAQ,QAASZ,IAEvC,GAAKA,EAAQa,SAAWd,EAAIc,OAC3B,MAAM,IAAIC,WAAYF,EAAO,UAE9B,IAAMG,EAAYd,GACjB,MAAM,IAAIU,UAAWC,EAAQ,QAASX,IAIvC,IAFAI,EAAIN,EAAIc,OACRV,EAAM,GACAK,EAAI,EAAGA,EAAIH,EAAGG,IAAM,CAEzB,GADAD,EAAIR,EAAKS,IACHQ,EAAcT,GACnB,MAAM,IAAII,UAAWC,EAAQ,QAASJ,EAAGD,IAI1C,IAFAD,EAAIC,EAAEM,OACNT,EAAMJ,EAASQ,GACTC,EAAI,EAAGA,EAAIH,EAAGG,IACnBL,EAAMH,EAAQgB,KAAMf,EAASE,EAAKG,EAAGE,GAAK,CAAED,EAAGC,GAAKV,GAErDI,EAAIe,KAAMd,EACV,CACD,OAAOD,CACR"}